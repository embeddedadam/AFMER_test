<launch>
		<!-- Load robot description and start state publisher-->
    <param name="robot_description" textfile="$(find AFMER_description)/urdf/afmer.urdf" />

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen"/>
		
		<!-- Start RPLIDAR sensor node which provides LaserScan data  -->
    <node name="rplidarNode" pkg="rplidar_ros" type="rplidarNode" output="screen">
        <param name="serial_port" type="string" value="/dev/rplidar"/>
        <param name="serial_baudrate" type="int" value="115200"/>
        <param name="frame_id" type="string" value="laser"/>
        <param name="inverted" type="bool" value="false"/>
        <param name="angle_compensate" type="bool" value="true"/>
    </node>

    <!-- Start imu sensor node -->
    <node pkg="MPU9255" name="MPU9255_node" type="MPU9255_node">
	<remap from="/imu/data_raw" to="/imu"/>
	</node>
 
   <node pkg="imu_complementary_filter" type="complementary_filter_node"
      name="complementary_filter_node" output="screen">
      <param name="fixed_frame" value="base_link"/>
      <param name="use_mag" value="true"/>
      <param name="do_bias_estimation" value="true"/>
      <param name="do_adaptive_gain" value="true"/>
      <param name="gain_acc" value="0.01"/>
      <param name="gain_mag" value="0.01"/>
      <param name="publish_tf"    value="true"/>
      <!--remap from="/imu/data" to="/imu"/-->
    </node>
		
    <node pkg="AFMER_description" name="closed_loop_controller" type="closed_loop_controller.py"/>

		<!-- Start Google Cartographer node with custom configuration file-->
    <node name="cartographer_node" pkg="cartographer_ros" type="cartographer_node" args="
          -configuration_directory
              $(find AFMER_description)/configuration_files
          -configuration_basename afmer_2d.lua" output="screen">
	<remap from="odom" to="odometry/filtered" />
    </node>

		<!-- Additional node which converts Cartographer map into ROS occupancy grid map. -->
    <node name="cartographer_occupancy_grid_node" pkg="cartographer_ros" type="cartographer_occupancy_grid_node" args="-resolution 0.01" />
    
            <!--  ************** Navigation ***************  -->
	<node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
  	  <rosparam file="$(find AFMER_description)/configuration_files/costmap_common_params.yaml" command="load" ns="global_costmap" />
  	 	<rosparam file="$(find AFMER_description)/configuration_files/costmap_common_params.yaml" command="load" ns="local_costmap" />
  		<rosparam file="$(find AFMER_description)/configuration_files/local_costmap_params.yaml" command="load" />
  		<rosparam file="$(find AFMER_description)/configuration_files/global_costmap_params.yaml" command="load" />
  		<rosparam file="$(find AFMER_description)/configuration_files/teb_local_planner_params.yaml" command="load" />

		<param name="base_global_planner" value="global_planner/GlobalPlanner" />
		<param name="planner_frequency" value="1.0" />
		<param name="planner_patience" value="5.0" />

		<param name="base_local_planner" value="teb_local_planner/TebLocalPlannerROS" />
		<param name="controller_frequency" value="5.0" />
		<param name="controller_patience" value="15.0" />

      <param name="clearing_rotation_allowed" value="true" /> <!-- Our carlike robot is able to rotate in place -->
	</node>
</launch>
